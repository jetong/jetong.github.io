Things to keep in mind:
How many of these HTML elements are on my page? Do I want this style to apply to every one of these elements?
What are the children of this HTML element, and do I want this style to apply to them as well?
Is this element a block element or an inline element, and does this style make sense in that context?

To center align an element, set its margin:auto and set its parent(using div if needed) to have text-align:center.

<!DOCTYPE html>
<html lang="en">  
<head>
  <meta charset="utf-8">
  <title>HTML5 Semantics and Flexbox</title>
  <style>
    header, footer {
      margin: 0.2em;
      padding: 0.5em;
      background-color: #D2691E;
      text-align: center;
    }  
    .row {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    justify-content: space-between;
    }    
    nav {
    margin: 0.2em;
    min-height: 8em;
    padding: 0.5em;  
    width: 10%;
    background-color: lightgreen;
    text-align: center;  
    }
    .column {
    margin: 0.2em;
    min-height: 8em;
    padding: 1em;
    width: 65%;
    background-color: #9df5d7;  
    }
    aside {
    margin: 0.2em;
    min-height: 8em;
    padding: 1em;
    width: 20%;
    background-color: lightBlue;
    }
    a {
      text-decoration: none;
    }
    a:hover {
      color: red;
    }
  </style>
</head>
<body>
  <header>
    <h1>HTML5 Semantics and Flexbox</h1>    
  </header>
  
<div class="row">
  <nav>    
    <h3>Navigate</h3>          
    <strong>Home<br>
    <a href="">Link1</a><br>
    <a href="">Link2</a>
    </strong>
  </nav>
  <main class="column">
    <article>
      <h2>
        About This Page
      </h2>
      <p>On this page, I am experimenting with HTML5 semantics and CSS flexbox for a tidy layout.</p>
      <p>On JS Bin, I purposedly includes the stylesheet on the HTML tab (instead of separate CSS tab) for easier code reading for those with small screen.</p>
      <p>The <code>main</code> element is placed within a <code>div</code> element along with <code>nav</code> and <code>aside</code>. I do not know if this is right or wrong (let me know?).</p>
      <p>Navigation links are placed within <code>nav</code>, laid on the left. The <code>main</code> is at the center column (this column). Within it is the main topic (this article).</p>
      <p>The <code>aside</code> element is at the rightmost of the column, I put supplemental information on it.</p>    
    </article>
    <article>
      <h2>Test This Page!</h2>
      <p>Do test this page by:</p>
        <ul>
          <li>Resizing the browser windows; see if flexbox lives up to its reputation.</li>
          <li>Run HTML Outliner or HeadingsMap (or similar tool) and see if the outline is good. </li>
          <li>Check the markup in this page with W3C Markup validator; see if the markups are good. Paste the URL of this page to the address column. <a href="https://validator.w3.org/" target="_blank">Click here to try!</a>.</li>
          <li>Check the CSS part of this page too! <a href="https://jigsaw.w3.org/css-validator/" target="_blank">Click here!</a></li>
        </ul>
      
    </article>
  </main>  
  <aside>
    <h2>HTML</h2>    
    <p>Stands for HyperText Markup Language. The current standard is HTML5.</p>
    <h2>CSS</h2>
    <p>Stands for Cascaded Style Sheet. The current standard is CSS3.</p>
    <h2>URL</h2>
    <p>Short for Uniform Resource Locator. It is a reference (an address) to a resource on the Internet.</p>
  </aside>
</div>

  <footer>Nov, 2015 @ royray</footer>  
 </body>
</html>
 
/* Applying the same style across multiple selectors: */
p, ul, ol {
   color: blue;
   background-color: pink;
}

/* PROPERTIES */
/* color and background-color */
3 ways to format values:
-keywords: aqua, black, blue, fuchsia,gray, green, lime, maroon, navy, olive, purple, red, silver, teal, yellow, white and orange.
-hex: #00CC00
-decimal rgb: rgb(0,204,0)

/* font-family */
"font-family" allows a list of fonts in the order of your preference, to address different browser support.
End with a font type supported by all browsers.
Use double quotes with font names that contain spaces.

/* font-size */
Use "em" and "px" for size.
The idea is (1) to not set the font size of the BODY element (in HTML), but use the default size of the device, 
because that is a size that the reader can comfortably read and (2) express font sizes of other elements in em.
Using "px" guarantees the font to look sharp, but reserve its use to aligning text with images.

/* font-weight */
The weight of a font is the thickness of the letters. You can set this property using keywords with which you 
might be familiar: 
bold, normal or lighter
or values 100, 200, 300, 400(normal), 500, 600, 700(bold), 800 or 900.

/* font-style */
normal, italic, oblique

/* text-decoration */
Values: none | underline | overline | line-through | blink 
        colors (must be last value),
        solid | double | dotted | dashed | wavy
h2 {
  text-decoration: underline overline wavy red; 
}

/* SPACING ELEMENTS */
Define in either of 2 ways:
Absolute terms: using an exact number of pixels,
Relative terms: using percentages or ems.

Box-model inside-out: Content -> Padding -> Border -> Margin

/* padding (only deals with spacing) */
3 ways to define:
padding: 20px;
padding-top, padding-right, padding-bottom, padding-left
padding: 10px 15px 20px 25px;

/* border (deals with spacing, color, style) */
By default, borders are set to be empty, but you can set their width, color, style, even an image!
p {
   border: 1px black solid;
}

/* margin (spacing only) */
Be careful, vertical margins can be tricky. When two vertical margins touch they "collapse" such 
that the space between the elements is equivalent to the larger of the two margins.

