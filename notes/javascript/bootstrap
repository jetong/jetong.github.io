Download bootstrap
Folder structure after unzipping:
-Bootstrap
  -CSS
  -IMG
  -JS
Can move these folders around within project, but CSS and IMG folders must be at same level.
Link bootstrap.css in a link tag inside head.

Bootstrap.js has dependency on JQuery, so include JQuery in script tag before bootstrap.
Place these in a script tag at the very end of the body tag rather than in the head for 
better perceived page load times.

Use semantic class names.  Use descriptive names that are not too specific.
Sidebar rather than rightSide, or success or warning instead of redtext.
This gives us flexibility and understanding.

Classes in bootstrap are typically refactored into singular and modular effects and these
can be composed with one another to give multiple effects to an element.
This allows us to be very specific and granular about what effects we want or do not want to be included.

To customize certain styles offered in bootstrap.css, link your own stylesheet after the bootstrap.css link.
Inside your stylesheet, override the style (first inspect the element and trace back to the property style 
provided in bootstrap.css and copy/paste to your stylesheet for editing).


LAYOUTS WITH BOOTSTRAP

Grid Layouts
<div class="row">
  <div class="span7">Left</div>
  <div class="span5">Right</div>
</div>
<div class="row">
  <div class="span3">3</div>
  <!-- offset classes push elements to the right and leave a gap in the grid -->
  <div class="span7" offset2">7 offset 2</div>     
</div>

By default, all content is flush left aligned.
Also by default, bootstrap grid never changes a column's defined span width even if window is shrunk.
Instead, the columns collapse to form a new row below.

Fixed Grids (non-responsive):
If we don't want the above default behavior, surround the rows with a <div class="container">
This now centers the grid on the page, and the columns are fixed and don't collapse.
Note that when we inspect this container element, we see that bootstrap has assigned a fixed 
width in pixels, and so the columns that make up the container has fixed width as well.
To start considering responsive grids, we need to look at Fluid Grids and Responsive Design.

Fluid Grids:
We assign percentages to the column widths rather than specific pixel values.
Change class="container" to class ="container-fluid" and class="row" to class="row=fluid"
Embedded images also scale in both directions proportionally.

Responsive Design:
Using media queries:
@media(min-width:768px) and (max-width:979px) {
  .. styles for this size ..
}
Bootstrap already presets the media queries for some common devices.

Simply include bootstrap-responsive.min.css and add the responsive classes to the designated column divs.
Available classes: visible-phone, visible-tablet, visible-desktop, hidden-phone, hidden-tablet, hidden-desktop.
Then both fixed and fluid grid items will adjust to smaller devices.
<div class="container">
  <div class="row">
    <div class="span4">
      <div class="visible-phone">Only visible on phone</div>
    </div>
  </div>
</div>

www.boottheme.com to personalize themes for download.



EVERYDAY BOOTSTRAP


Typography:
Some classes to affect text: muted, text-warning, text-error, text-info, text-success, pull-right (right align)
Bootstrap styles <address> element into a block, and <blockquote> elements have some indentation, bordering and background.
<ul> and <ol> have class: unstyled to remove padding and bullets.
<code> for short inline code
<pre> for longer block of code, has border, background, and monaco font.  Use <pre class="pre-scrollable"> for longer code.
For syntax highlighting check out: google-code-prettify or syntaxhighlighter.

Tables:
<div class="span12">
  <table class="table">				<-- bootstrap class
    <caption>Schedule</caption>		<-- optional for screenreaders
    <thead>							<-- explicitly use <thead> to help bootstrap identify header row
      <tr>
        <th>Course</th>
        <th>Instructor</th>
        <th>Days of Week</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>Math</td>
        <td>Smith</td>
        <td>M-W-F</td>
      </tr>
      ....
    </tbody>
  </table>
</div>

Other optional table classes: table-striped, table-bordered, table-hover, table-condensed.
Other tr classes: success, error, info.




Forms:
The default styles in bootstrap.css already does a lot of formatting.
(note that labels are slightly off center from their checkboxes and radiobuttons.  For these we need
to add class="checkbox" and class="radio" or class="radio inline" to line other radio buttons side by side)

For inputs, can use classes like input-mini or input-medium to size(or just use class span12, etc).  
Can also make the input block level: input-block-level, pushing adjacent elements below as it takes the full width.
<input class="btn btn-primary"> for other input button styles

Ex: Default form and horizontal form.  Includes demo of basic validation feedback using help-inline or help-block
    and extending inputs with append and prepend.

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>Forms</title>
    <link href="bootstrap/css/bootstrap.css" rel="stylesheet" />   
</head>
<body>
    <div class="container">
        <div class="row">
            <div class="span12">
                <h2>Default Form</h2>
                <form action="/signup" method="post">
                    <fieldset>
                        <legend>To get started, provide us with the following information:</legend>
                        <label for="UserInfo_Email">Email:</label>
                        <input id="UserInfo_Email" name="UserInfo.Email" type="text" value="">
                        <label for="UserInfo_FirstName">First name:</label>
                        <input id="UserInfo_FirstName" name="UserInfo.FirstName" type="text" value="">
                        <label for="UserInfo_LastName">Last name:</label>
                        <input id="UserInfo_LastName" name="UserInfo.LastName" type="text" value="">
                        <label for="UserInfo_Company">Company:</label>
                        <input id="UserInfo_Company" name="UserInfo.Company" type="text" value="">
                        <label for="UserInfo_HowHeard">How did you hear about us?</label>
                        <select id="UserInfo_HowHeard_SelectedValue" name="UserInfo.HowHeard.SelectedValue">
                            <option>Blogs</option>
                            <option>Colleague</option>
                            <option>Returning customer</option>
                            <option>Pluralsight instructor</option>
                            <option>Microsoft</option>
                            <option>MSDN</option>
                            <option>Trade Show</option>
                            <option>Search Engine</option>
                            <option>Social Community</option>
                            <option>User Group</option>
                        </select>
                        <label for="UserInfo_JobTitle">Job title:</label>
                        <input class="span6" id="UserInfo_JobTitle" name="UserInfo.JobTitle" type="text" value="">
                        <div>
                            <label class="checkbox inline">
                                <input type="checkbox" value="">
                                I like Pina Coladas
                            </label>
                            <label class="checkbox inline">
                                <input type="checkbox" value="">
                                I like getting caught in the rain
                            </label>
                        </div>
                        <label class="radio">
                            <input type="radio" name="optionsRadios" value="option1" checked>
                            I'm into yoga                             
                        </label>
                        <label>
                            <input type="radio" name="optionsRadios" id="optionsRadios2" value="option2">
                            I'm not into yoga
                        </label>
                        <label for="describe">Describe yourself:</label>
                        <textarea class="input-block-level" id="describe" rows="3"></textarea>
                        <input type="submit" value="Sign Up!" class="btn btn-primary" />
                    </fieldset>
                </form>
            </div>
        </div>
        <hr />
        <div class="row">
            <div class="span6">
                <h2>Search</h2>
                <form class="form-search">
                    <input type="search" class="search-query">
                    <button type="submit" class="btn">Search</button>
                </form>
            </div>
        </div>
        <div class="row">
            <div class="span12">
                <h2>Horizontal Form</h2>
                <form action="/signup" method="post" class="form-horizontal">
                    <fieldset>
                        <legend>To get started, provide us with the following information:</legend>
                        <div class="control-group error">
                            <label class="control-label" for="UserInfo_Email">Email:</label>
                            <div class="controls">
                                <input id="Text1" name="UserInfo.Email" type="text" value="">
                                <span class="help-block">You need to fill this out!</span>
                            </div>
                        </div>
                        <div class="control-group">
                            <label class="control-label" for="UserInfo_HowHeard">How did you hear about us?</label>
                            <div class="controls">
                                <select multiple id="Select1" name="UserInfo.HowHeard.SelectedValue">
                                    <option selected="selected"></option>
                                    <option>Blogs</option>
                                    <option>Colleague</option>
                                    <option>Returning customer</option>
                                    <option>Pluralsight instructor</option>
                                    <option>Microsoft</option>
                                    <option>MSDN</option>
                                    <option>Trade Show</option>
                                    <option>Search Engine</option>
                                    <option>Social Community</option>
                                    <option>User Group</option>
                                </select>
                            </div>
                        </div>
                        <div class="control-group">
                            <div class="controls">
                                <label class="checkbox">
                                    I like Pina Coladas
                                <input type="checkbox" value="">
                                </label>
                            </div>
                        </div>
                        <div class="control-group">
                            <div class="controls">
                                <input type="submit" value="Sign Up!" />
                            </div>
                        </div>
                    </fieldset>
                </form>
            </div>

        </div>
        <div class="row">
            <div class="span12">
                <h2>Extending Inputs</h2>
                <form action="/signup" method="post">
                    <fieldset>
                        <legend>To get started, provide us with the following information:</legend>

                        <div class="input-prepend">
                            <span class="add-on">@</span>
                            <input id="handle" type="text" placeholder="Twitter Handle" />
                        </div>

                        <div class="input-prepend input-append">
                            <span class="add-on">$</span>
                            <input id="Text2" type="text" placeholder="Budget" />
                            <span class="add-on">.00</span>
                        </div>

                    </fieldset>
                </form>
            </div>
        </div>
    </div>
</body>
</html>



Buttons:
Ex:

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>Buttons</title>
    <link href="bootstrap/css/bootstrap.css" rel="stylesheet" />
</head>
<body>
    <div class="container">
        <div class="row">
            <div class="span12">
                <table class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <th>Button</th>
                            <th>Link</th>
                            <th>class</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td><button type="button" class="btn">Default</button></td>
                            <td><a href="#" class="btn">Default</a></td>
                            <td><code>btn</code></td>
                        </tr>
                        <tr>
                            <td><button type="button" class="btn btn-primary">Primary</button></td>
                            <td><a href="#" class="btn btn-primary">Primary</a></td>
                            <td><code>btn btn-primary</code></td>
                        </tr>
                        <tr>
                            <td><button type="button" class="btn btn-info">Info</button></td>
                            <td><a href="#" class="btn btn-info">Info</a></td>
                            <td><code>btn btn-info</code></td>
                        </tr>
                        <tr>
                            <td><button type="button" class="btn btn-success">Success</button></td>
                            <td><a href="#" class="btn btn-success">Success</a></td>
                            <td><code>btn btn-success</code></td>
                        </tr>
                        <tr>
                            <td><button type="button" class="btn btn-warning">Warning</button></td>
                            <td><a href="#" class="btn btn-warning">Warning</a></td>
                            <td><code>btn btn-warning</code></td>
                        </tr>
                        <tr>
                            <td><button type="button" class="btn btn-danger">Danger</button></td>
                            <td><a href="#" class="btn btn-danger">Danger</a></td>
                            <td><code>btn btn-danger</code></td>
                        </tr>
                        <tr>
                            <td><button type="button" class="btn btn-inverse">Inverse</button></td>
                            <td><a href="#" class="btn btn-inverse">Inverse</a></td>
                            <td><code>btn btn-inverse</code></td>
                        </tr>
                        <tr>
                            <td><button type="button" class="btn btn-link">Link</button></td>
                            <td><a href="#" class="btn btn-link">Link</a></td>
                            <td><code>btn btn-link</code></td>
                        </tr>
                        <tr>
                            <td><button type="button" class="btn btn-primary btn-large">Large</button></td>
                            <td><a href="#" class="btn btn-primary btn-large">Large</a></td>
                            <td><code>btn btn-primary btn-large</code></td>
                        </tr>
                        <tr>
                            <td><button type="button" class="btn btn-primary btn-small">Small</button></td>
                            <td><a href="#" class="btn btn-primary btn-small">Small</a></td>
                            <td><code>btn btn-primary btn-small</code></td>
                        </tr>
                        <tr>
                            <td><button type="button" class="btn btn-primary btn-mini">Mini</button></td>
                            <td><a href="#" class="btn btn-primary btn-mini">Mini</a></td>
                            <td><code>btn btn-primary btn-mini</code></td>
                        </tr>
                        <tr>
                            <td><button type="button" class="btn btn-primary btn-block">Block</button></td>
                            <td><a href="#" class="btn btn-primary btn-block">Block</a></td>
                            <td><code>btn btn-primary btn-block</code></td>
                        </tr>
                        <tr>
                            <td><button type="button" class="btn btn-primary disabled">Disabled</button></td>
                            <td><a href="#" class="btn btn-primary disabled">Disabled</a></td>
                            <td><code>btn btn-primary disabled</code></td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</body>
</html>




Images and Icons:
(Icons from glyphicons.com.  Also check out font-awesome in github)


<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>images & icons</title>
    <link href="bootstrap/css/bootstrap.css" rel="stylesheet" />
    <style>
      
    </style>
</head>
<body>
    <div class="container">
        <div class="row">
        <h2>Images</h2>
            <div class="span5">
                <img src="images/lobster.jpg" />
            </div>
            <div class="span5 offset1">
                <img class="img-rounded" src="images/lobster.jpg" />
            </div>
        </div>
        <hr />
        <div class="row">
            <div class="span5">
                <img class="img-circle" src="images/lobster.jpg" />
            </div>
            <div class="span5 offset1">
                <img class="img-polaroid" src="images/lobster.jpg" />
            </div>
        </div>
    </div>
    <div class="row">
        <div class="span12">
                    <h2>Icons</h2>
            <section id="icons">
                <div class="lead">Icons <small>by <a href="http://glyphicons.com" target="_blank">Glyphicons</a></small></div>

                <span class="icon-glass"></span>icon-glass
                <i class="icon-music"></i>icon-music
                <i class="icon-search"></i>icon-search
                <i class="icon-envelope"></i>icon-envelope
                <i class="icon-heart"></i>icon-heart
                <i class="icon-star"></i>icon-star
                <i class="icon-star-empty"></i>icon-star-empty
                <i class="icon-user"></i>icon-user
                <i class="icon-film"></i>icon-film
                <i class="icon-th-large"></i>icon-th-large
                <i class="icon-th"></i>icon-th
                <i class="icon-th-list"></i>icon-th-list
                <i class="icon-ok"></i>icon-ok
                <i class="icon-remove"></i>icon-remove
                <i class="icon-zoom-in"></i>icon-zoom-in
                <i class="icon-zoom-out"></i>icon-zoom-out
                <i class="icon-off"></i>icon-off
                <i class="icon-signal"></i>icon-signal
                <i class="icon-cog"></i>icon-cog
                <i class="icon-trash"></i>icon-trash
                <i class="icon-home"></i>icon-home
                <i class="icon-file"></i>icon-file
                <i class="icon-time"></i>icon-time
                <i class="icon-road"></i>icon-road
                <i class="icon-download-alt"></i>icon-download-alt
                <i class="icon-download"></i>icon-download
                <i class="icon-upload"></i>icon-upload
                <i class="icon-inbox"></i>icon-inbox
                <i class="icon-play-circle"></i>icon-play-circle
                <i class="icon-repeat"></i>icon-repeat
                <i class="icon-refresh"></i>icon-refresh
                <i class="icon-list-alt"></i>icon-list-alt
                <i class="icon-lock"></i>icon-lock
                <i class="icon-flag"></i>icon-flag
                <i class="icon-headphones"></i>icon-headphones
                <i class="icon-volume-off"></i>icon-volume-off
                <i class="icon-volume-down"></i>icon-volume-down
                <i class="icon-volume-up"></i>icon-volume-up
                <i class="icon-qrcode"></i>icon-qrcode
                <i class="icon-barcode"></i>icon-barcode
                <i class="icon-tag"></i>icon-tag
                <i class="icon-tags"></i>icon-tags
                <i class="icon-book"></i>icon-book
                <i class="icon-bookmark"></i>icon-bookmark
                <i class="icon-print"></i>icon-print
                <i class="icon-camera"></i>icon-camera
                <i class="icon-font"></i>icon-font
                <i class="icon-bold"></i>icon-bold
                <i class="icon-italic"></i>icon-italic
                <i class="icon-text-height"></i>icon-text-height
                <i class="icon-text-width"></i>icon-text-width
                <i class="icon-align-left"></i>icon-align-left
                <i class="icon-align-center"></i>icon-align-center
                <i class="icon-align-right"></i>icon-align-right
                <i class="icon-align-justify"></i>icon-align-justify
                <i class="icon-list"></i>icon-list

                <i class="icon-indent-left"></i>icon-indent-left
                <i class="icon-indent-right"></i>icon-indent-right
                <i class="icon-facetime-video"></i>icon-facetime-video
                <i class="icon-picture"></i>icon-picture
                <i class="icon-pencil"></i>icon-pencil
                <i class="icon-map-marker"></i>icon-map-marker
                <i class="icon-adjust"></i>icon-adjust
                <i class="icon-tint"></i>icon-tint
                <i class="icon-edit"></i>icon-edit
                <i class="icon-share"></i>icon-share
                <i class="icon-check"></i>icon-check
                <i class="icon-move"></i>icon-move
                <i class="icon-step-backward"></i>icon-step-backward
                <i class="icon-fast-backward"></i>icon-fast-backward
                <i class="icon-backward"></i>icon-backward
                <i class="icon-play"></i>icon-play
                <i class="icon-pause"></i>icon-pause
                <i class="icon-stop"></i>icon-stop
                <i class="icon-forward"></i>icon-forward
                <i class="icon-fast-forward"></i>icon-fast-forward
                <i class="icon-step-forward"></i>icon-step-forward
                <i class="icon-eject"></i>icon-eject
                <i class="icon-chevron-left"></i>icon-chevron-left
                <i class="icon-chevron-right"></i>icon-chevron-right
                <i class="icon-plus-sign"></i>icon-plus-sign
                <i class="icon-minus-sign"></i>icon-minus-sign
                <i class="icon-remove-sign"></i>icon-remove-sign
                <i class="icon-ok-sign"></i>icon-ok-sign

                <i class="icon-question-sign"></i>icon-question-sign
                <i class="icon-info-sign"></i>icon-info-sign
                <i class="icon-screenshot"></i>icon-screenshot
                <i class="icon-remove-circle"></i>icon-remove-circle
                <i class="icon-ok-circle"></i>icon-ok-circle
                <i class="icon-ban-circle"></i>icon-ban-circle
                <i class="icon-arrow-left"></i>icon-arrow-left
                <i class="icon-arrow-right"></i>icon-arrow-right
                <i class="icon-arrow-up"></i>icon-arrow-up
                <i class="icon-arrow-down"></i>icon-arrow-down
                <i class="icon-share-alt"></i>icon-share-alt
                <i class="icon-resize-full"></i>icon-resize-full
                <i class="icon-resize-small"></i>icon-resize-small
                <i class="icon-plus"></i>icon-plus
                <i class="icon-minus"></i>icon-minus
                <i class="icon-asterisk"></i>icon-asterisk
                <i class="icon-exclamation-sign"></i>icon-exclamation-sign
                <i class="icon-gift"></i>icon-gift
                <i class="icon-leaf"></i>icon-leaf
                <i class="icon-fire"></i>icon-fire
                <i class="icon-eye-open"></i>icon-eye-open
                <i class="icon-eye-close"></i>icon-eye-close
                <i class="icon-warning-sign"></i>icon-warning-sign
                <i class="icon-plane"></i>icon-plane
                <i class="icon-calendar"></i>icon-calendar
                <i class="icon-random"></i>icon-random
                <i class="icon-comment"></i>icon-comment
                <i class="icon-magnet"></i>icon-magnet

                <i class="icon-chevron-up"></i>icon-chevron-up
                <i class="icon-chevron-down"></i>icon-chevron-down
                <i class="icon-retweet"></i>icon-retweet
                <i class="icon-shopping-cart"></i>icon-shopping-cart
                <i class="icon-folder-close"></i>icon-folder-close
                <i class="icon-folder-open"></i>icon-folder-open
                <i class="icon-resize-vertical"></i>icon-resize-vertical
                <i class="icon-resize-horizontal"></i>icon-resize-horizontal
                <i class="icon-hdd"></i>icon-hdd
                <i class="icon-bullhorn"></i>icon-bullhorn
                <i class="icon-bell"></i>icon-bell
                <i class="icon-certificate"></i>icon-certificate
                <i class="icon-thumbs-up"></i>icon-thumbs-up
                <i class="icon-thumbs-down"></i>icon-thumbs-down
                <i class="icon-hand-right"></i>icon-hand-right
                <i class="icon-hand-left"></i>icon-hand-left
                <i class="icon-hand-up"></i>icon-hand-up
                <i class="icon-hand-down"></i>icon-hand-down
                <i class="icon-circle-arrow-right"></i>icon-circle-arrow-right
                <i class="icon-circle-arrow-left"></i>icon-circle-arrow-left
                <i class="icon-circle-arrow-up"></i>icon-circle-arrow-up
                <i class="icon-circle-arrow-down"></i>icon-circle-arrow-down
                <i class="icon-globe"></i>icon-globe
                <i class="icon-wrench"></i>icon-wrench
                <i class="icon-tasks"></i>icon-tasks
                <i class="icon-filter"></i>icon-filter
                <i class="icon-briefcase"></i>icon-briefcase
                <i class="icon-fullscreen"></i>icon-fullscreen
               
                <h2>Inverted Icon</h2>
                <div style="background-color: #700">
                    <i class="icon-fullscreen icon-white"></i>icon-fullscreen
                </div>

                <h2>Button Sizes Redux</h2>
                <div>
                    <a class="btn btn-large" href="#"><i class="icon-star"></i>Star</a>
                    <a class="btn btn-small" href="#"><i class="icon-star"></i>Star</a>
                    <a class="btn btn-mini" href="#"><i class="icon-star"></i>Star</a>
                </div>

                <h2>Button Group</h2>
                <div class="btn-group">
                    <a class="btn" href="#"><i class="icon-align-left"></i></a>
                    <a class="btn" href="#"><i class="icon-align-center"></i></a>
                    <a class="btn" href="#"><i class="icon-align-right"></i></a>
                    <a class="btn" href="#"><i class="icon-align-justify"></i></a>
                </div>
               
                <h2>Extending Inputs Redux</h2>
                <form class="form-horizontal">
                    <div class="control-group">
                        <label class="control-label" for="inputIcon">Email address</label>
                        <div class="controls">
                            <div class="input-prepend">
                                <span class="add-on"><i class="icon-envelope"></i></span>
                                <input id="inputIcon" type="text">
                            </div>
                        </div>
                    </div>
                </form>
            </section>
        </div>
    </div>
</body>
</html>




BOOTSTRAP COMPONENTS
Dependencies: bootstrap.css, jquery-1.7.1.min.js, bootstrap.js
Dropdown Menus (can be used in other different places like buttons and nav bars):

Ex: Simple dropdown, divider, and submenu
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>Menus, Buttons, Dropdowns</title>
    <link href="bootstrap/css/bootstrap.css" rel="stylesheet" />
    <script src="scripts/jquery-1.7.1.min.js"></script>
    <script src="bootstrap/js/bootstrap.js"></script>
</head>
<body>
    <div class="container">
        <div class="row">
            <div class="span12">
                <h2>Simple Dropdown</h2>
                <div class="dropdown">

                    <a id="dropdownmenu" class="dropdown-toggle" data-toggle="dropdown" href="#">See the sites!
                        <b class="caret"></b>
                    </a>

                    <ul class="dropdown-menu" role="menu" aria-labelledby="dropdownmenu">
                        <!-- tabindex="-1" so that tabbing traverses the anchors at the top level rather than
                             going through each of the list items within the menus -->
                        <li><a tabindex="-1" href="http://pluralsight.com">Pluralsight</a></li>
                        <li><a tabindex="-1" href="http://amazon.com">Amazon</a></li>
                    </ul>

                </div>
            </div>
        </div>

        <div class="row">
            <div class="span12">
                <h2>With Dividers</h2>
                <div class="dropdown">

                    <a class="dropdown-toggle" data-toggle="dropdown" href="#">See the sites!
                        <b class="caret"></b>
                    </a>

                    <ul class="dropdown-menu">
                        <li><a href="http://pluralsight.com">Pluralsight</a></li>
                        <li><a href="http://amazon.com">Amazon</a></li>
                        <li class="divider"></li>
                        <li><a href="http://twitter.com">Twitter</a></li>
                    </ul>

                </div>
            </div>
        </div>


         <div class="row">
            <div class="span12">
                <h2>Sub Menu</h2>

                <div class="dropdown">

                    <a class="dropdown-toggle" data-toggle="dropdown" href="#">See the sites!
                        <b class="caret"></b>
                    </a>

                    <ul class="dropdown-menu">
                        <li><a href="http://pluralsight.com">Pluralsight</a></li>
                        <li><a href="http://amazon.com">Amazon</a></li>
                        <li class="divider"></li>
                        <li class="dropdown-submenu">
                            <a href="#">More options</a>
                            <ul class="dropdown-menu">
                                <li><a href="http://odetocode.com">OdeToCode</a></li>
                                <li><a href="http://twitter.com">Twitter</a></li>
                            </ul>
                        </li>
                    </ul>

                </div>
            </div>
        </div>

    </div>
</body>
</html>


Buttons with Menus:

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>Menus & Buttons</title>
    <link href="bootstrap/css/bootstrap.css" rel="stylesheet" />
    <script src="scripts/jquery-1.7.1.min.js"></script>
    <script src="bootstrap/js/bootstrap.js"></script>
</head>
<body>
    <div class="container">

        <div class="row">
            <div class="span12">
                <h2>Button groups</h2>

                <div class="btn-toolbar">
                    <div class="btn-group">
                        <button class="btn"><i class="icon-backward"></i></button>
                        <button class="btn"><i class="icon-play"></i></button>
                        <button class="btn"><i class="icon-forward"></i></button>
                    </div>
                    <div class="btn-group">
                        <button class="btn"><i class="icon-plus"></i></button>
                        <button class="btn"><i class="icon-minus"></i></button>
                        <button class="btn"><i class="icon-asterisk"></i></button>
                    </div>
                </div>
                <hr />

                <h2>Buttons with menus</h2>
                <div class="btn-toolbar">
                    <div class="btn-group dropup">    <!-- menu drops upward -->
                        <!-- Style the button -->
                        <a class="btn btn-primary btn-large dropdown-toggle" data-toggle="dropdown" href="#">See the sites
                            <span class="caret"></span>
                        </a>

                        <ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu">
                            <li><a tabindex="-1" href="http://pluralsight.com">Pluralsight</a></li>
                            <li><a tabindex="-1" href="http://amazon.com">Amazon</a></li>
                        </ul>

                    </div>                   
                        <div class="btn-group">
                        <!-- Provide 2 anchors so button press has one functionality, while the caret has dropdown menu -->
                        <a class="btn btn-large btn-primary" href="#">See the sites</a>
                        <a class="btn btn-large btn-primary dropdown-toggle" data-toggle="dropdown" href="#">
                            <span class="caret"></span>
                        </a>

                        <ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu">
                            <li><a tabindex="-1" href="http://pluralsight.com">Pluralsight</a></li>
                            <li><a tabindex="-1" href="http://amazon.com">Amazon</a></li>
                        </ul>

                    </div>                   
                </div>

            </div>
        </div>


    </div>
</body>
</html>


Tabs and Pills:
There are a number of nav components in bootstrap, and often use <ul> to create it.
<ul class="nav"> takes away the bullets and gives basic hover shading.

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>Navigation</title>
    <link href="bootstrap/css/bootstrap.css" rel="stylesheet" />
    <script src="scripts/jquery-1.7.1.min.js"></script>
    <script src="bootstrap/js/bootstrap.js"></script>
</head>
<body>
    <div class="container">

        <div class="row">
            <div class="span3">
                <h2>Tabs & Pills</h2>

                <ul class="nav nav-list">
                    <li class="nav-header">Places to go</li>
                    <li><a href="#">Home</a></li>
                    <li class="active"><a href="#">Contact</a></li>
                    <li><a href="#">Sales</a></li>
                    <li class="dropdown">
                        <a class="dropdown-toggle" data-toggle="dropdown" href="#">See more sites!
                            <b class="caret"></b>
                        </a>
                        <ul class="dropdown-menu">
                            <li><a tabindex="-1" href="http://pluralsight.com">Pluralsight</a></li>
                            <li><a tabindex="-1" href="http://amazon.com">Amazon</a></li>
                        </ul>
                    </li>
                </ul>

            </div>
            <div class="span9">
                <h2>Tabbable</h2>
                <!-- tabbable enables us to have tabs that toggle to display other content within the page 
                     that are within tab-content divs. -->
                <div class="tabbable tabs-below">
                    <ul class="nav nav-tabs">
                        <li class="active">
                            <a href="#tab1" data-toggle="tab">Section 1</a></li>
                        <li>
                            <a href="#tab2" data-toggle="tab">Section 2</a></li>
                    </ul>
                    <div class="tab-content">
                        <div class="tab-pane active" id="tab1">
                            <p>Twitter Bootstrap is fun!</p>
                        </div>
                        <div class="tab-pane" id="tab2">
                            <p>Pluralsight is fun!</p>
                        </div>
                    </div>
                </div>


            </div>
        </div>
    </div>
</body>
</html>


The Navbar:
Other variations:
<nav class="navbar navbar-fixed-top">   (Navigation bar stays as page scrolls)
<nav class="navbar navbar-fixed-bottom">
The fixed navbar will block some portion of the body, so add some margin:
<style>
  body {
    margin-top: 40px;
  }
</style>

<nav class="navbar navbar-inverse">    (Takes body's text and background color and applies to navbar inversely)

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>Navigation</title>
    <link href="bootstrap/css/bootstrap.css" rel="stylesheet" />
    <link href="bootstrap/css/bootstrap-responsive.css" rel="stylesheet" />
    <script src="scripts/jquery-1.7.1.min.js"></script>
    <script src="bootstrap/js/bootstrap.js"></script>
    <style>
    
    </style>
</head>
<body>

    <nav class="navbar navbar-inverse">
        <div class="navbar-inner">
            <a class="brand" href="/">The Sample Site</a>

            <!-- allows us to have a clickable 3-row/bar icon that reveals the nav elements below
                 that would have collapsed on smaller devices -->
            <a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </a>

            <!-- responsive design (requires us to link bootstrap-responsive.css and bootstrap.js)
                 allows us to specify which components to collapse and hide -->
            <div class="nav-collapse collapse">
                <ul class="nav">
                    <li><a href="/Articles/List">Articles</a></li>
                    <li><a href="/blogs/all">Blog</a></li>
                    <li><a href="/about/">About</a></li>
                    <!-- can add a dropdown as before -->
                    <li class="dropdown">
                        <a class="dropdown-toggle" data-toggle="dropdown" href="#">See more sites!
                            <b class="caret"></b>
                        </a>
                        <ul class="dropdown-menu">
                            <li><a tabindex="-1" href="http://pluralsight.com">Pluralsight</a></li>
                            <li><a tabindex="-1" href="http://amazon.com">Amazon</a></li>
                        </ul>
                    </li>
                </ul>
                <!-- include a search form -->
                <form class="navbar-search pull-right input-append">
                    <input class="span2" id="appendedInputButtons" type="search">
                    <button class="btn" type="button">Search</button>
                </form>
            </div>
        </div>
    </nav>


    <div class="container">

        <div class="row">
            <div class="span10">

                <!-- Use breadcrumb to let users know what links/pages they've navigated through to get 
                     to their current page -->
                <ul class="breadcrumb">
                    <li><a href="#">Home</a> <span class="divider">/</span></li>
                    <li><a href="#">Articles</a> <span class="divider">/</span></li>
                    <li class="active">Life with XAML</li>
                </ul>

                <!-- Creates pagination control bar:  Prev | 1 | 2 | 3 | 4 | Next  -->
                <div class="pagination pagination-centered pagination-large">
                    <ul>
                        <li class="disabled"><span>Prev</span></li>
                        <li class="active"><a href="/articles/lifewithxaml?page=1">1</a></li>
                        <li><a href="/articles/lifewithxaml?page=1">2</a></li>
                        <li><a href="/articles/lifewithxaml?page=1">3</a></li>
                        <li><a href="/articles/lifewithxaml?page=1">4</a></li>
                        <li><a href="/articles/lifewithxaml?page=1">Next</a></li>
                    </ul>
                </div>


                <h1>Life with XAML</h1>
                <div class="muted">
                    Saturday, February 04, 2006
                </div>

                <article>
                    <p>British mathematician John Conway invented the “Game of Life” in 1970. The rules of the game are simple, but the results of the game can be surprising. This combination made Conway and his creation famous, and stirred the debate over the ability of machines to simulate life. Although the “Game of Life” didn’t start as a computer game, programmers have written versions of the game in nearly every programming language and for nearly every platform. In this article we will implement the “Game of Life” for the Windows Presentation Foundation (WPF). </p>
                    <h3>Rules of Life</h3>
                    <p>
                        The game of life plays out on a grid of cells. Each cell can be “alive” or “dead”. As time moves on, a dead cell can come to life, while a living cell can die. The rules for determining the state of a cell for the next time slice are the following: 
                    </p>
                </article>

            </div>
            <div class="span2">
                <section>
                    <ul class="nav nav-list">
                        <li><a class="" href="http://twitter.com/OdeToCode">Follow</a></li>
                        <li><a class="" href="http://feeds.feedburner.com/OdeToCode" title="Subscribe to my feed" rel="alternate" type="application/rss+xml">Subscribe</a></li>
                        <li><a class="" href="/about/contact">Contact</a></li>
                        <li><a class="" href="/about/search">Search</a></li>
                        <li><a class="" href="/home/archives">Archives</a></li>
                    </ul>
                </section>
            </div>
        </div>
    </div>
    <footer>
        (c) Some Web Site
    </footer>
</body>
</html>


Miscellaneous Components:

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>Other Components</title>
    <link href="bootstrap/css/bootstrap.css" rel="stylesheet" />
    <link href="bootstrap/css/bootstrap-responsive.css" rel="stylesheet" />
    <script src="scripts/jquery-1.7.1.min.js"></script>
    <script src="bootstrap/js/bootstrap.js"></script>
    <style>
    </style>
</head>
<body>

    <nav class="navbar navbar-inverse">
        <div class="navbar-inner">
            <a class="brand" href="/">The Sample Site</a>

            <a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </a>

            <div class="nav-collapse collapse">
                <ul class="nav">
                    <li><a href="/Articles/List">Articles</a></li>
                    <li><a href="/blogs/all">Blog</a></li>
                    <li><a href="/about/">About</a></li>
                    <li class="dropdown">
                        <a class="dropdown-toggle" data-toggle="dropdown" href="#">See more sites!
                            <b class="caret"></b>
                        </a>
                        <ul class="dropdown-menu">
                            <li><a tabindex="-1" href="http://pluralsight.com">Pluralsight</a></li>
                            <li><a tabindex="-1" href="http://amazon.com">Amazon</a></li>
                        </ul>
                    </li>
                </ul>
                <form class="navbar-search pull-right input-append">
                    <input class="span2" id="appendedInputButtons" type="search">
                    <button class="btn" type="button">Search</button>
                </form>
            </div>
        </div>
    </nav>


    <div class="container">

        <div class="row">
            <div class="span10">

<!-- hero -->
                <div class="hero-unit">
                    <h1>Use HTML!</h1>
                    <p>It's better than XML!</p>
                    <p>
                        <a class="btn btn-primary btn-large">Learn more</a>
                    </p>
                </div>
<!-- end hero -->

                <h1>Life with XAML</h1>
                <div class="muted">
                    Saturday, February 04, 2006
                </div>

                <article>
                    <h3>Rules of Life </h3>
<!-- label -->
                    <div><span class="label label-important">Follow the rules!</span></div>
<!-- end label -->
                    <p>
                        The game of life plays out on a grid of cells. Each cell can be “alive” or “dead”. As time moves on, a dead cell can come to life, while a living cell can die. The rules for determining the state of a cell for the next time slice are the following: 
                    </p>
                    <ol>
                        <li>A cell that is alive stays alive if two <i>or</i> three of the neighboring cells are alive.</li>
                        <li>A cell that is dead comes alive if three of the neighboring cells are alive.</li>
                    </ol>

<!-- media -->
                    <h3>Pictures of Life</h3>
                    <div class="media">
                        <a class="pull-left" href="#">
                            <img class="media-object" src="http://home.adelphi.edu/~stemkoski/mathematrix/0life.jpg">
                        </a>
                        <div class="media-body">
                            <h4 class="media-heading">In Black and White</h4>
                            <div class="media">
                                This game uses black circles in a white grid. 
                            </div>
                        </div>
                    </div>
                    <div class="media">
                        <a class="pull-left" href="#">
                            <img class="media-object" src="https://lh3.ggpht.com/W29C-I-82oU4i8OFTw-xjvkJrU78AwirkJVr1QbKxKHOyqUHxGjX7Yt5XJH6mzp41DBl=w124">
                        </a>
                        <div class="media-body">
                            <h4 class="media-heading">Square</h4>
                            <div class="media">
                                Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. 
                            </div>
                            <div class="media">
                                <a class="pull-left" href="#">
                                    <img class="media-object" src="http://upload.wikimedia.org/wikipedia/commons/9/9c/Conways_game_of_life_canoe.png" />
                                </a>
                                <div class="media-body">
                                    <h4 class="media-heading">A Bit Of Color</h4>
                                    <div class="media">
                                        Lorem Ipsum is simply dummy text of the printing and typesetting industry. 
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>


                    <h3>Building a UI with Angled Brackets</h3>

<!-- alert that can be dismissed -->
                    <div class="alert alert-success">
                        <button class="close" data-dismiss="alert">&times;</button>
                        <strong>Wow!</strong> You made it this far!
                    </div>

<!-- component with code snippet -->
                    <div style="BORDER-RIGHT: black 1pt solid; BORDER-TOP: black 1pt solid; FONT-SIZE: 8pt; BORDER-LEFT: black 1pt solid; BORDER-BOTTOM: black 1pt solid; FONT-FAMILY: monospace; BACKGROUND-COLOR: #d3d3bd">
                        <span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">asp</span><span style="COLOR: blue">:</span><span style="COLOR: maroon">Panel</span><span style="COLOR: black"> </span><span style="COLOR: red">runat</span><span style="COLOR: blue">="server"</span><span style="COLOR: black"> </span><span style="COLOR: red">ID</span><span style="COLOR: blue">="Panel1"&gt;<br>
                        </span><span style="COLOR: black">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">asp</span><span style="COLOR: blue">:</span><span style="COLOR: maroon">Label</span><span style="COLOR: black"> </span><span style="COLOR: red">runat</span><span style="COLOR: blue">="server"</span><span style="COLOR: black"> </span><span style="COLOR: red">ID</span><span style="COLOR: blue">="Label1"</span><span style="COLOR: black"> </span><span style="COLOR: red">Text</span><span style="COLOR: blue">="Name: "/&gt;<br>
                        </span><span style="COLOR: black">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="COLOR: blue">&lt;</span><span style="COLOR: maroon">asp</span><span style="COLOR: blue">:</span><span style="COLOR: maroon">TextBox</span><span style="COLOR: black"> </span><span style="COLOR: red">runat</span><span style="COLOR: blue">="server"</span><span style="COLOR: black"> </span><span style="COLOR: red">ID</span><span style="COLOR: blue">="TextBox1"</span><span style="COLOR: black"> </span><span style="COLOR: blue">/&gt;<br>
                            &lt;/</span><span style="COLOR: maroon">asp</span><span style="COLOR: blue">:</span><span style="COLOR: maroon">Panel</span><span style="COLOR: blue">&gt;<br>
                            </span>
                    </div>
                    <p></p>

                    <h3>Goodbye, World</h3>
                    <p>In this article we took a look at programming with WPF, both using XAML and C# code. We’ve seen data binding and layout elements, yet have barely scratched the surface of what is available in WPF and the WinFX API. <a href="http://odetocode.com/aimages/lifexaml/fxlife.zip">Download the code</a>, and try the Game of Life for yourself. </p>
                </article>

                <div class="pagination pagination-centered">
                    <ul>
                        <li class="disabled"><span>Prev</span></li>
                        <li class="active"><a href="/articles/lifewithxaml?page=1">1</a></li>
                        <li><a href="/articles/lifewithxaml?page=1">2</a></li>
                        <li><a href="/articles/lifewithxaml?page=1">3</a></li>
                        <li><a href="/articles/lifewithxaml?page=1">4</a></li>
                        <li><a href="/articles/lifewithxaml?page=1">Next</a></li>
                    </ul>
                </div>

<!-- nav bar on right side with span2 -->
            </div>
            <div class="span2">
                <section>
                    <ul class="nav nav-list">
                        <li><a class="" href="http://twitter.com/OdeToCode">Follow</a></li>
                        <li><a class="" href="http://feeds.feedburner.com/OdeToCode" title="Subscribe to my feed" rel="alternate" type="application/rss+xml">Subscribe</a></li>
                        <li><a class="" href="/about/contact">Contact</a></li>
                        <li><a class="" href="/about/search">Search</a></li>
                        <li><a class="" href="/home/archives">Archives</a></li>
                    </ul>
                </section>
                <hr />
<!-- more examples of labels -->
                <section>
                    <span class="label">Default</span>
                    <span class="label label-success">Success Label</span>
                    <span class="label label-warning">Warning</span>
                    <span class="label label-important">Important</span>
                    <span class="label label-info">Info</span>
                    <span class="label label-inverse">Inverse</span>
                </section>
                <hr />
                <section>
                    <span class="badge">B</span>
                    <span class="badge badge-success">Software</span>
                    <span class="badge badge-warning">Wide Badge</span>
                    <span class="badge badge-important">I</span>
                    <span class="badge badge-info"><i class="icon-info-sign icon-white"></i></span>
                    <span class="badge badge-inverse">O</span>
                </section>
                <hr />
            </div>
        </div>
    </div>
    <footer>
        (c) Some Web Site
    </footer>
</body>
</html>



Bootstrap and JavaScript
Button states, modal dialogue boxes (with progress bar), tooltips & popovers(more persistent tooltip), 
scrollspy, typeahead, carousel.

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>Other Components</title>
    <link href="bootstrap/css/bootstrap.css" rel="stylesheet" />
    <link href="bootstrap/css/bootstrap-responsive.css" rel="stylesheet" />
    <script src="scripts/jquery-1.7.1.min.js"></script>
    <script src="bootstrap/js/bootstrap.js"></script>
    <style>
        body {
            background-color: #ddddcc;
            margin-top:40px;     <!-- so the top nav bar doesn't cover body content -->
        }
    </style>
</head>

<!-- Typically set scrollspy on body, but any container will work.
     Use data-offset to compensate for the margin-top styling above -->
<body data-spy="scroll" data-target=".navspy" data-offset="40">

    <!-- main nav bar at top of screen -->

    <nav class="nav navbar navbar-inverse navbar-fixed-top">
        <div class="navbar-inner navspy">
            <!-- Creates more prominent link that goes to top of page -->
            <a class="brand" href="#">JavaScript</a>

            <ul class="nav">
                <li><a href="#buttons">Buttons</a></li>
                <li><a href="#modal">Modal</a></li>
                <li><a href="#tooltips">Tooltips</a></li>
                <li><a href="#spy">Scrollspy</a></li>                
                <li><a href="#language">Typeahead</a></li>
                <li><a href="#carousel">Carousel</a></li>
            </ul>

        </div>
    </nav>


    <div class="container">

        <div class="row">
            <div class="span10">
                <h2 id="buttons">More Buttons</h2>

                 <div id="btngroup" class="btn-group" data-toggle="buttons-radio">
                    <button type="button" class="btn btn-primary">1</button>
                    <button type="button" class="btn btn-primary">2</button>
                    <button type="button" class="btn btn-primary">3</button>
                </div>
                
                <!-- button for displaying button states -->
                <button id="getbuttonstates" type="button" class="btn">Retrieve button states</button>
                
                <!-- div for displaying button states -->
                <div id="buttonstates">
                     
                </div>

                <button id="imageSaver" type="button" class="btn btn-primary"
                    <!-- define text to be displayed on the button when button() is called on click. -->
                    data-loading-text="Saving..."
                    data-complete-text="Saved! Try another?">
                    Save the image
                </button>               

                <script>

                    $(function () {

                        $("#imageSaver").click(function () {

                            <!-- button() parameter corresponds to button attribute data-loading-text,
                                 data-complete-text, or data-reset-text.  Bootstrap will look for it. -->
                            var btn = $(this);
                            btn.button("loading");  

                            <!-- here the "reset" parameter is a little different.  It is invoking a 
                                 specific method to reset the button to its original state.  We can instead
                                 have the button finish with other text by doing btn.button("complete"); -->
                            <!-- This is very common for JQuery plugins, where the button features are
                                 proxied through a call to the primary button method -->
                            setTimeout(function () {
                                btn.button("reset");
                            }, 2000);

                        });
                      
                        $("#getbuttonstates").click(function () {
                            
                            <!-- hasClass("active") true if button is depressed -->
                            var output = "";
                            $("#btngroup").children().each(function () {
                                output += $(this).text() + " is " + $(this).hasClass("active") + " ";
                            });
                            $("#buttonstates").text(output);
                        });
               
                    });

                </script>
                <hr />


                <h2 id="modal">Modals</h2>

                <!-- Button to open up modal dialogue box -->
                <!-- Note the href points to the id below -->
                <a href="#themodal" role="button" class="btn btn-primary" data-toggle="modal">Launch a modal dialog</a>

                <!-- Define the dialogue box itself with header, body, footer -->
                <div id="themodal" class="modal hide fade">
                    <div class="modal-header"> <!-- Add an "x" close button -->
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                        <h3>Modal header</h3>
                    </div>
                    <div class="modal-body">
                        <p>Are you sure you want to do this?</p>
<!-- Add progress bar -->
                        <div class="progress progress-striped">
                            <div id="doitprogress" class="bar"></div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <a href="#" class="btn" data-dismiss="modal">Close</a>
                        <a id="yesbutton" href="#" class="btn btn-primary" data-loading-text="Doing it...">Yes! Do it now!</a>
                    </div>
                </div>

                <script>

                    $(function () {

                        var yesButton = $("#yesbutton");
                        var theModal = $("#themodal");
                        var progress = $("#doitprogress");

                        yesButton.click(function () {
                            yesButton.button("loading");

                            var counter = 0;
                            var countDown = function () {
                                counter++;
                                if (counter == 11) {
                                    yesButton.button("reset");
                                    theModal.modal("hide");
                                }
                                else {
                                    progress.width(counter * 10 + "%");
                                    setTimeout(countDown, 500);
                                }
                            };
                            setTimeout(countDown, 500);
                        });


                    });

                </script>
                <hr />

                <h2 id="tooltips">Tooltips</h2> 
<!-- Bootstrap gives us more control over tooltips: where to display, how long, etc -->

                A <a id="cpu" href="#" rel="tooltip" 
                    title="central processing unit" 
                    data-placement="right"
                    class="initialism">CPU</a> is the hardware within a computer that carries out the instructions of a 
                computer program by performing the basic arithmetical, logical, and 
                In older computers, CPUs require one or more printed circuit boards. 

<!-- Much like tooltip, but more persistent (need click to close the dialogue box) 
                     Note the default behavior being overriden in javascript below. -->
                <a href="#" rel="popover"
                    data-content="This is where the computations take place!"
                    data-original-title="Arithmetic Logic Unit">ALU</a>, which performs 
                arithmetic and logical operations, and the control unit (CU), which extracts 
                instructions from memory and decodes and executes them, calling on the ALU when necessary.
                                

                <script>

                    $(function () {
                        $("a[rel='tooltip']").tooltip();
                        $("a[rel='popover']").popover({ placement: "right" })
                              <!-- This prevents the default behavior of scrolling the page to the top
                                   upon clicking on the tooltip -->
                                             .click(function (e) { e.preventDefault() });
                    });

                </script>
                <hr />

<!-- Side nav bar stays on page (viewport) even when scrolling the page, and highlights the list item based on
     current location on the page. -->
     
                <h2 id="spy">Spying</h2>
                <div>
                    Espionage or spying involves a government or individual obtaining information that is considered secret or confidential without the permission of the holder of the information. Espionage is inherently clandestine, as it is taken for granted that it is unwelcome and, in many cases illegal and punishable by law. It is a subset of intelligence gathering—which otherwise may be conducted from public sources and using perfectly legal and ethical means. It is crucial to distinguish espionage from intelligence gathering, as the latter does not necessarily involve espionage, but often collates open-source information. When successful, however, espionage always produces intelligence.
                    Espionage is often part of an institutional effort by a government or commercial concern, however the term is generally associated with state spying on potential or actual enemies primarily for military purposes. Spying involving corporations is known as industrial espionage.
                    One of the most effective ways to gather data and information about an enemy (or potential enemy) is by infiltrating the enemy's ranks. This is the job of the spy (espionage agent). Spies can bring back all sorts of information concerning the size and strength of an enemy army. They can also find dissidents within the enemy's forces and influence them to defect. In times of crisis, spies can also be used to steal technology and to sabotage the enemy in various ways. Counterintelligence operatives can feed false information to enemy spies, protecting important domestic secrets and preventing attempts at subversion. Nearly every country has very strict laws concerning espionage, and the penalty for being caught is often severe. However, the benefits that can be gained through espionage are generally great enough that most governments and many large corporations make use of it to varying degrees.
                    Further information on clandestine HUMINT (human intelligence) information collection techniques is available, including discussions of operational techniques, asset recruiting and the tradecraft used to collect this information.
                </div>
                <hr />



                <h2 id="language">Typeahead</h2>
                <div>
                    <form>
                        <label>Tell me your favorite language:</label>
                        <input id="languageInput" type="text" 
                           data-provide="typeahead" data-items="4" 
<!-- Tedious to have HTML encoding.  Instead, can use a function (see below) to set the array of item matches.
     Note: the javascript function overrides the data-source attribute. -->
                           data-source="[&quot;JavaScript&quot;,&quot;C#&quot;,&quot;Java&quot;,&quot;C++&quot;]">

                    </form>   
                    <p>programming language is an artificial language designed to communicate instructions to a machine, particularly a computer. Programming languages can be used to create programs that control the behavior of a machine and/or to express algorithms precisely.</p> 
                    <p>The earliest programming languages predate the invention of the computer, and were used to direct the behavior of machines such as Jacquard looms and player pianos[citation needed]. Thousands of different programming languages have been created, mainly in the computer field, with many being created every year. Most programming languages describe computation in an imperative style, i.e., as a sequence of commands, although some languages, such as those that support functional programming or logic programming, use alternative forms of description.</p>
                    <p>The description of a programming language is usually split into the two components of syntax (form) and semantics (meaning). Some languages are defined by a specification document (for example, the C programming language is specified by an ISO Standard), while other languages, such as Perl 5 and earlier, have a dominant implementation that is used as a reference.</p>
                    <p>The term computer language is sometimes used interchangeably with programming language.[20] However, the usage of both terms varies among authors, including the exact scope of each. One usage describes programming languages as a subset of computer languages.[21] In this vein, languages used in computing that have a different goal than expressing computer programs are generically designated computer languages. For instance, markup languages are sometimes referred to as computer languages to emphasize that they are not meant to be used for programming.[22] Another usage regards programming languages as theoretical constructs for programming abstract machines, and computer languages as the subset thereof that runs on physical computers, which have finite hardware resources.[23] John C. Reynolds emphasizes that formal specification languages are just as much programming languages as are the languages intended for execution. He also argues that textual and even graphical input formats that affect the behavior of a computer are programming languages, despite the fact they are commonly not Turing-complete, and remarks that ignorance of programming language concepts is the reason for many flaws in input formats.[24]</p>
                    <p>A programming language is a notation for writing programs, which are specifications of a computation or algorithm.[1] Some, but not all, authors restrict the term "programming language" to those languages that can express all possible algorithms.[1][2] Traits often considered important for what constitutes a programming includes...</p>
                </div>
                <script>
                    $(function () {
                        $("#languageInput").typeahead({ source: ["Lisp", "Clojure", "F#", "Haskell"] });
                    });

                </script>
                <hr />


                <h2 id="carousel">Carousel</h2>

                <div id="slidingcarousel" class="carousel slide">
<!-- carousel-inner to contain all the images -->
<!-- use images of the same resolution--otherwise the carousel will grow/shrink to fit -->
                    <div class="carousel-inner">
                        <div class="item">
                          <img src="images/lobster.jpg" />  
                          <div class="carousel-caption">
                              <h4>Lobster!</h4>
                              <p>A lobster dinner at the House of Elliot in Ghent, Belgium.</p>
                          </div>
                        </div>
                        <div class="item">
                            <img src="images/IMG_0241.JPG" />  
                          <div class="carousel-caption">
                              <h4>A Church!</h4>
                              <p>The church was magnificent, and even had a singing choir.</p>
                          </div>
                        </div>
                        <div class="item">
                            <img src="images/IMG_0250.JPG" />  
                          <div class="carousel-caption">
                              <h4>The Catacombs</h4>
                              <p>When I think of catacombs, I think of dusty, dirty, skeleton filled basements. Not this one...</p>
                          </div>
                        </div>
                    </div>
<!-- set up controls for the carousel -->
<!-- data-slide to give it actual functionality -->
                    <a class="carousel-control left" href="#slidingcarousel" data-slide="prev">&lsaquo;</a>
                    <a class="carousel-control right" href="#slidingcarousel" data-slide="next">&rsaquo;</a>
                </div>

                <script>
                   
                    $(function () {
                        $('.carousel').carousel({
                            interval: 2000
                        });
                    });

                </script>

                <hr />
                
            </div>



            <div class="span2">
                <section class="navspy">
<!-- nav-pills to give rounded list items,
     nav-stacked to have vertical nav bar,
     affix to keep nav bar in viewport -->
                    <ul id="navigation" class="nav nav-pills nav-stacked affix">
<!-- have each list element point to a dom element on the page -->
                        <li><a href="#buttons">Buttons</a></li>
                        <li><a href="#modal">Modal</a></li>
                        <li><a href="#tooltips">Tooltips</a></li>
                        <li><a href="#spy">Scrollspy</a></li>                        
                        <li><a href="#language">Typeahead</a></li>
                        <li><a href="#carousel">Carousel</a></li>
                    </ul>
                </section>
            </div>
        </div>
    </div>

</body>
</html>
